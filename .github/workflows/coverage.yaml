name: Test and Coverage Check (PR)

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Coverage Check on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        python-version: [ 3.11 ]
    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Run tests and generate coverage data
        run: |
          python -m pytest --cov=. --cov-report=xml:coverage.xml

      - name: Convert coverage data
        run: |
          python coverage_combine_helper.py

      - name: Upload coverage data
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data-${{ matrix.os }}
          path: .coverage*

  collect-coverage:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all coverage data
        uses: actions/download-artifact@v3
        with:
          path: coverage-data

      - name: Install coverage.py
        run: |
          python -m pip install --upgrade pip
          pip install coverage

      - name: Convert Coverage data
        run: |
          ls coverage-data | xargs -I {} python coverage_combine_helper.py $PWD $PWD/coverage-data/{}/.coverage


      - name: Combine coverage data
        run: |
          coverage combine --append --rcfile=.coveragerc coverage-data/*/.coverage
          coverage report -m
          coverage xml -o combined-coverage.xml

      - name: Check combined coverage percentage and echo result
        run: |
          coverage=$(coverage report -m | tail -n 1 | awk '{print $NF}' | sed 's/%//')
          echo "Combined Coverage is ${coverage}%"
          echo "COMBINED_COVERAGE=${coverage}" >> $GITHUB_ENV

      - name: Echo combined coverage result
        run: echo "The combined coverage across all platforms is ${{ env.COMBINED_COVERAGE }}%"
